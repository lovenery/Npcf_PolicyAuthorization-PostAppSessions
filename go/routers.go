/*
 * Npcf_PolicyAuthorization Service API
 *
 * This is the Policy Authorization Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"/npcf-policyauthorization/v1/",
		Index,
	},

	{
		"PostAppSessions",
		strings.ToUpper("Post"),
		"/npcf-policyauthorization/v1/app-sessions",
		PostAppSessions,
	},

	{
		"DeleteEventsSubsc",
		strings.ToUpper("Delete"),
		"/npcf-policyauthorization/v1/app-sessions/{appSessionId}/events-subscription",
		DeleteEventsSubsc,
	},

	{
		"UpdateEventsSubsc",
		strings.ToUpper("Put"),
		"/npcf-policyauthorization/v1/app-sessions/{appSessionId}/events-subscription",
		UpdateEventsSubsc,
	},

	{
		"DeleteAppSession",
		strings.ToUpper("Post"),
		"/npcf-policyauthorization/v1/app-sessions/{appSessionId}/delete",
		DeleteAppSession,
	},

	{
		"GetAppSession",
		strings.ToUpper("Get"),
		"/npcf-policyauthorization/v1/app-sessions/{appSessionId}",
		GetAppSession,
	},

	{
		"ModAppSession",
		strings.ToUpper("Patch"),
		"/npcf-policyauthorization/v1/app-sessions/{appSessionId}",
		ModAppSession,
	},
}
